#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_8687680363762493539) {
   out_8687680363762493539[0] = 0;
   out_8687680363762493539[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_8687680363762493539[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_8687680363762493539[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_8687680363762493539[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_8687680363762493539[5] = -sin(in_vec[1]);
   out_8687680363762493539[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8687680363762493539[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8687680363762493539[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_8687680363762493539[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_8687680363762493539[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_8687680363762493539[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_8687680363762493539[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8687680363762493539[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8687680363762493539[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_8687680363762493539[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_8687680363762493539[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_8687680363762493539[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_8136490426412747881) {
   out_8136490426412747881[0] = delta_x[0] + nom_x[0];
   out_8136490426412747881[1] = delta_x[1] + nom_x[1];
   out_8136490426412747881[2] = delta_x[2] + nom_x[2];
   out_8136490426412747881[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_8136490426412747881[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_8136490426412747881[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_8136490426412747881[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_8136490426412747881[7] = delta_x[6] + nom_x[7];
   out_8136490426412747881[8] = delta_x[7] + nom_x[8];
   out_8136490426412747881[9] = delta_x[8] + nom_x[9];
   out_8136490426412747881[10] = delta_x[9] + nom_x[10];
   out_8136490426412747881[11] = delta_x[10] + nom_x[11];
   out_8136490426412747881[12] = delta_x[11] + nom_x[12];
   out_8136490426412747881[13] = delta_x[12] + nom_x[13];
   out_8136490426412747881[14] = delta_x[13] + nom_x[14];
   out_8136490426412747881[15] = delta_x[14] + nom_x[15];
   out_8136490426412747881[16] = delta_x[15] + nom_x[16];
   out_8136490426412747881[17] = delta_x[16] + nom_x[17];
   out_8136490426412747881[18] = delta_x[17] + nom_x[18];
   out_8136490426412747881[19] = delta_x[18] + nom_x[19];
   out_8136490426412747881[20] = delta_x[19] + nom_x[20];
   out_8136490426412747881[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1524655933590429885) {
   out_1524655933590429885[0] = -nom_x[0] + true_x[0];
   out_1524655933590429885[1] = -nom_x[1] + true_x[1];
   out_1524655933590429885[2] = -nom_x[2] + true_x[2];
   out_1524655933590429885[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1524655933590429885[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1524655933590429885[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1524655933590429885[6] = -nom_x[7] + true_x[7];
   out_1524655933590429885[7] = -nom_x[8] + true_x[8];
   out_1524655933590429885[8] = -nom_x[9] + true_x[9];
   out_1524655933590429885[9] = -nom_x[10] + true_x[10];
   out_1524655933590429885[10] = -nom_x[11] + true_x[11];
   out_1524655933590429885[11] = -nom_x[12] + true_x[12];
   out_1524655933590429885[12] = -nom_x[13] + true_x[13];
   out_1524655933590429885[13] = -nom_x[14] + true_x[14];
   out_1524655933590429885[14] = -nom_x[15] + true_x[15];
   out_1524655933590429885[15] = -nom_x[16] + true_x[16];
   out_1524655933590429885[16] = -nom_x[17] + true_x[17];
   out_1524655933590429885[17] = -nom_x[18] + true_x[18];
   out_1524655933590429885[18] = -nom_x[19] + true_x[19];
   out_1524655933590429885[19] = -nom_x[20] + true_x[20];
   out_1524655933590429885[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_7453067886472422609) {
   out_7453067886472422609[0] = 1.0;
   out_7453067886472422609[1] = 0;
   out_7453067886472422609[2] = 0;
   out_7453067886472422609[3] = 0;
   out_7453067886472422609[4] = 0;
   out_7453067886472422609[5] = 0;
   out_7453067886472422609[6] = 0;
   out_7453067886472422609[7] = 0;
   out_7453067886472422609[8] = 0;
   out_7453067886472422609[9] = 0;
   out_7453067886472422609[10] = 0;
   out_7453067886472422609[11] = 0;
   out_7453067886472422609[12] = 0;
   out_7453067886472422609[13] = 0;
   out_7453067886472422609[14] = 0;
   out_7453067886472422609[15] = 0;
   out_7453067886472422609[16] = 0;
   out_7453067886472422609[17] = 0;
   out_7453067886472422609[18] = 0;
   out_7453067886472422609[19] = 0;
   out_7453067886472422609[20] = 0;
   out_7453067886472422609[21] = 0;
   out_7453067886472422609[22] = 1.0;
   out_7453067886472422609[23] = 0;
   out_7453067886472422609[24] = 0;
   out_7453067886472422609[25] = 0;
   out_7453067886472422609[26] = 0;
   out_7453067886472422609[27] = 0;
   out_7453067886472422609[28] = 0;
   out_7453067886472422609[29] = 0;
   out_7453067886472422609[30] = 0;
   out_7453067886472422609[31] = 0;
   out_7453067886472422609[32] = 0;
   out_7453067886472422609[33] = 0;
   out_7453067886472422609[34] = 0;
   out_7453067886472422609[35] = 0;
   out_7453067886472422609[36] = 0;
   out_7453067886472422609[37] = 0;
   out_7453067886472422609[38] = 0;
   out_7453067886472422609[39] = 0;
   out_7453067886472422609[40] = 0;
   out_7453067886472422609[41] = 0;
   out_7453067886472422609[42] = 0;
   out_7453067886472422609[43] = 0;
   out_7453067886472422609[44] = 1.0;
   out_7453067886472422609[45] = 0;
   out_7453067886472422609[46] = 0;
   out_7453067886472422609[47] = 0;
   out_7453067886472422609[48] = 0;
   out_7453067886472422609[49] = 0;
   out_7453067886472422609[50] = 0;
   out_7453067886472422609[51] = 0;
   out_7453067886472422609[52] = 0;
   out_7453067886472422609[53] = 0;
   out_7453067886472422609[54] = 0;
   out_7453067886472422609[55] = 0;
   out_7453067886472422609[56] = 0;
   out_7453067886472422609[57] = 0;
   out_7453067886472422609[58] = 0;
   out_7453067886472422609[59] = 0;
   out_7453067886472422609[60] = 0;
   out_7453067886472422609[61] = 0;
   out_7453067886472422609[62] = 0;
   out_7453067886472422609[63] = 0;
   out_7453067886472422609[64] = 0;
   out_7453067886472422609[65] = 0;
   out_7453067886472422609[66] = -0.5*state[4];
   out_7453067886472422609[67] = -0.5*state[5];
   out_7453067886472422609[68] = -0.5*state[6];
   out_7453067886472422609[69] = 0;
   out_7453067886472422609[70] = 0;
   out_7453067886472422609[71] = 0;
   out_7453067886472422609[72] = 0;
   out_7453067886472422609[73] = 0;
   out_7453067886472422609[74] = 0;
   out_7453067886472422609[75] = 0;
   out_7453067886472422609[76] = 0;
   out_7453067886472422609[77] = 0;
   out_7453067886472422609[78] = 0;
   out_7453067886472422609[79] = 0;
   out_7453067886472422609[80] = 0;
   out_7453067886472422609[81] = 0;
   out_7453067886472422609[82] = 0;
   out_7453067886472422609[83] = 0;
   out_7453067886472422609[84] = 0;
   out_7453067886472422609[85] = 0;
   out_7453067886472422609[86] = 0;
   out_7453067886472422609[87] = 0.5*state[3];
   out_7453067886472422609[88] = 0.5*state[6];
   out_7453067886472422609[89] = -0.5*state[5];
   out_7453067886472422609[90] = 0;
   out_7453067886472422609[91] = 0;
   out_7453067886472422609[92] = 0;
   out_7453067886472422609[93] = 0;
   out_7453067886472422609[94] = 0;
   out_7453067886472422609[95] = 0;
   out_7453067886472422609[96] = 0;
   out_7453067886472422609[97] = 0;
   out_7453067886472422609[98] = 0;
   out_7453067886472422609[99] = 0;
   out_7453067886472422609[100] = 0;
   out_7453067886472422609[101] = 0;
   out_7453067886472422609[102] = 0;
   out_7453067886472422609[103] = 0;
   out_7453067886472422609[104] = 0;
   out_7453067886472422609[105] = 0;
   out_7453067886472422609[106] = 0;
   out_7453067886472422609[107] = 0;
   out_7453067886472422609[108] = -0.5*state[6];
   out_7453067886472422609[109] = 0.5*state[3];
   out_7453067886472422609[110] = 0.5*state[4];
   out_7453067886472422609[111] = 0;
   out_7453067886472422609[112] = 0;
   out_7453067886472422609[113] = 0;
   out_7453067886472422609[114] = 0;
   out_7453067886472422609[115] = 0;
   out_7453067886472422609[116] = 0;
   out_7453067886472422609[117] = 0;
   out_7453067886472422609[118] = 0;
   out_7453067886472422609[119] = 0;
   out_7453067886472422609[120] = 0;
   out_7453067886472422609[121] = 0;
   out_7453067886472422609[122] = 0;
   out_7453067886472422609[123] = 0;
   out_7453067886472422609[124] = 0;
   out_7453067886472422609[125] = 0;
   out_7453067886472422609[126] = 0;
   out_7453067886472422609[127] = 0;
   out_7453067886472422609[128] = 0;
   out_7453067886472422609[129] = 0.5*state[5];
   out_7453067886472422609[130] = -0.5*state[4];
   out_7453067886472422609[131] = 0.5*state[3];
   out_7453067886472422609[132] = 0;
   out_7453067886472422609[133] = 0;
   out_7453067886472422609[134] = 0;
   out_7453067886472422609[135] = 0;
   out_7453067886472422609[136] = 0;
   out_7453067886472422609[137] = 0;
   out_7453067886472422609[138] = 0;
   out_7453067886472422609[139] = 0;
   out_7453067886472422609[140] = 0;
   out_7453067886472422609[141] = 0;
   out_7453067886472422609[142] = 0;
   out_7453067886472422609[143] = 0;
   out_7453067886472422609[144] = 0;
   out_7453067886472422609[145] = 0;
   out_7453067886472422609[146] = 0;
   out_7453067886472422609[147] = 0;
   out_7453067886472422609[148] = 0;
   out_7453067886472422609[149] = 0;
   out_7453067886472422609[150] = 0;
   out_7453067886472422609[151] = 0;
   out_7453067886472422609[152] = 0;
   out_7453067886472422609[153] = 1.0;
   out_7453067886472422609[154] = 0;
   out_7453067886472422609[155] = 0;
   out_7453067886472422609[156] = 0;
   out_7453067886472422609[157] = 0;
   out_7453067886472422609[158] = 0;
   out_7453067886472422609[159] = 0;
   out_7453067886472422609[160] = 0;
   out_7453067886472422609[161] = 0;
   out_7453067886472422609[162] = 0;
   out_7453067886472422609[163] = 0;
   out_7453067886472422609[164] = 0;
   out_7453067886472422609[165] = 0;
   out_7453067886472422609[166] = 0;
   out_7453067886472422609[167] = 0;
   out_7453067886472422609[168] = 0;
   out_7453067886472422609[169] = 0;
   out_7453067886472422609[170] = 0;
   out_7453067886472422609[171] = 0;
   out_7453067886472422609[172] = 0;
   out_7453067886472422609[173] = 0;
   out_7453067886472422609[174] = 0;
   out_7453067886472422609[175] = 1.0;
   out_7453067886472422609[176] = 0;
   out_7453067886472422609[177] = 0;
   out_7453067886472422609[178] = 0;
   out_7453067886472422609[179] = 0;
   out_7453067886472422609[180] = 0;
   out_7453067886472422609[181] = 0;
   out_7453067886472422609[182] = 0;
   out_7453067886472422609[183] = 0;
   out_7453067886472422609[184] = 0;
   out_7453067886472422609[185] = 0;
   out_7453067886472422609[186] = 0;
   out_7453067886472422609[187] = 0;
   out_7453067886472422609[188] = 0;
   out_7453067886472422609[189] = 0;
   out_7453067886472422609[190] = 0;
   out_7453067886472422609[191] = 0;
   out_7453067886472422609[192] = 0;
   out_7453067886472422609[193] = 0;
   out_7453067886472422609[194] = 0;
   out_7453067886472422609[195] = 0;
   out_7453067886472422609[196] = 0;
   out_7453067886472422609[197] = 1.0;
   out_7453067886472422609[198] = 0;
   out_7453067886472422609[199] = 0;
   out_7453067886472422609[200] = 0;
   out_7453067886472422609[201] = 0;
   out_7453067886472422609[202] = 0;
   out_7453067886472422609[203] = 0;
   out_7453067886472422609[204] = 0;
   out_7453067886472422609[205] = 0;
   out_7453067886472422609[206] = 0;
   out_7453067886472422609[207] = 0;
   out_7453067886472422609[208] = 0;
   out_7453067886472422609[209] = 0;
   out_7453067886472422609[210] = 0;
   out_7453067886472422609[211] = 0;
   out_7453067886472422609[212] = 0;
   out_7453067886472422609[213] = 0;
   out_7453067886472422609[214] = 0;
   out_7453067886472422609[215] = 0;
   out_7453067886472422609[216] = 0;
   out_7453067886472422609[217] = 0;
   out_7453067886472422609[218] = 0;
   out_7453067886472422609[219] = 1.0;
   out_7453067886472422609[220] = 0;
   out_7453067886472422609[221] = 0;
   out_7453067886472422609[222] = 0;
   out_7453067886472422609[223] = 0;
   out_7453067886472422609[224] = 0;
   out_7453067886472422609[225] = 0;
   out_7453067886472422609[226] = 0;
   out_7453067886472422609[227] = 0;
   out_7453067886472422609[228] = 0;
   out_7453067886472422609[229] = 0;
   out_7453067886472422609[230] = 0;
   out_7453067886472422609[231] = 0;
   out_7453067886472422609[232] = 0;
   out_7453067886472422609[233] = 0;
   out_7453067886472422609[234] = 0;
   out_7453067886472422609[235] = 0;
   out_7453067886472422609[236] = 0;
   out_7453067886472422609[237] = 0;
   out_7453067886472422609[238] = 0;
   out_7453067886472422609[239] = 0;
   out_7453067886472422609[240] = 0;
   out_7453067886472422609[241] = 1.0;
   out_7453067886472422609[242] = 0;
   out_7453067886472422609[243] = 0;
   out_7453067886472422609[244] = 0;
   out_7453067886472422609[245] = 0;
   out_7453067886472422609[246] = 0;
   out_7453067886472422609[247] = 0;
   out_7453067886472422609[248] = 0;
   out_7453067886472422609[249] = 0;
   out_7453067886472422609[250] = 0;
   out_7453067886472422609[251] = 0;
   out_7453067886472422609[252] = 0;
   out_7453067886472422609[253] = 0;
   out_7453067886472422609[254] = 0;
   out_7453067886472422609[255] = 0;
   out_7453067886472422609[256] = 0;
   out_7453067886472422609[257] = 0;
   out_7453067886472422609[258] = 0;
   out_7453067886472422609[259] = 0;
   out_7453067886472422609[260] = 0;
   out_7453067886472422609[261] = 0;
   out_7453067886472422609[262] = 0;
   out_7453067886472422609[263] = 1.0;
   out_7453067886472422609[264] = 0;
   out_7453067886472422609[265] = 0;
   out_7453067886472422609[266] = 0;
   out_7453067886472422609[267] = 0;
   out_7453067886472422609[268] = 0;
   out_7453067886472422609[269] = 0;
   out_7453067886472422609[270] = 0;
   out_7453067886472422609[271] = 0;
   out_7453067886472422609[272] = 0;
   out_7453067886472422609[273] = 0;
   out_7453067886472422609[274] = 0;
   out_7453067886472422609[275] = 0;
   out_7453067886472422609[276] = 0;
   out_7453067886472422609[277] = 0;
   out_7453067886472422609[278] = 0;
   out_7453067886472422609[279] = 0;
   out_7453067886472422609[280] = 0;
   out_7453067886472422609[281] = 0;
   out_7453067886472422609[282] = 0;
   out_7453067886472422609[283] = 0;
   out_7453067886472422609[284] = 0;
   out_7453067886472422609[285] = 1.0;
   out_7453067886472422609[286] = 0;
   out_7453067886472422609[287] = 0;
   out_7453067886472422609[288] = 0;
   out_7453067886472422609[289] = 0;
   out_7453067886472422609[290] = 0;
   out_7453067886472422609[291] = 0;
   out_7453067886472422609[292] = 0;
   out_7453067886472422609[293] = 0;
   out_7453067886472422609[294] = 0;
   out_7453067886472422609[295] = 0;
   out_7453067886472422609[296] = 0;
   out_7453067886472422609[297] = 0;
   out_7453067886472422609[298] = 0;
   out_7453067886472422609[299] = 0;
   out_7453067886472422609[300] = 0;
   out_7453067886472422609[301] = 0;
   out_7453067886472422609[302] = 0;
   out_7453067886472422609[303] = 0;
   out_7453067886472422609[304] = 0;
   out_7453067886472422609[305] = 0;
   out_7453067886472422609[306] = 0;
   out_7453067886472422609[307] = 1.0;
   out_7453067886472422609[308] = 0;
   out_7453067886472422609[309] = 0;
   out_7453067886472422609[310] = 0;
   out_7453067886472422609[311] = 0;
   out_7453067886472422609[312] = 0;
   out_7453067886472422609[313] = 0;
   out_7453067886472422609[314] = 0;
   out_7453067886472422609[315] = 0;
   out_7453067886472422609[316] = 0;
   out_7453067886472422609[317] = 0;
   out_7453067886472422609[318] = 0;
   out_7453067886472422609[319] = 0;
   out_7453067886472422609[320] = 0;
   out_7453067886472422609[321] = 0;
   out_7453067886472422609[322] = 0;
   out_7453067886472422609[323] = 0;
   out_7453067886472422609[324] = 0;
   out_7453067886472422609[325] = 0;
   out_7453067886472422609[326] = 0;
   out_7453067886472422609[327] = 0;
   out_7453067886472422609[328] = 0;
   out_7453067886472422609[329] = 1.0;
   out_7453067886472422609[330] = 0;
   out_7453067886472422609[331] = 0;
   out_7453067886472422609[332] = 0;
   out_7453067886472422609[333] = 0;
   out_7453067886472422609[334] = 0;
   out_7453067886472422609[335] = 0;
   out_7453067886472422609[336] = 0;
   out_7453067886472422609[337] = 0;
   out_7453067886472422609[338] = 0;
   out_7453067886472422609[339] = 0;
   out_7453067886472422609[340] = 0;
   out_7453067886472422609[341] = 0;
   out_7453067886472422609[342] = 0;
   out_7453067886472422609[343] = 0;
   out_7453067886472422609[344] = 0;
   out_7453067886472422609[345] = 0;
   out_7453067886472422609[346] = 0;
   out_7453067886472422609[347] = 0;
   out_7453067886472422609[348] = 0;
   out_7453067886472422609[349] = 0;
   out_7453067886472422609[350] = 0;
   out_7453067886472422609[351] = 1.0;
   out_7453067886472422609[352] = 0;
   out_7453067886472422609[353] = 0;
   out_7453067886472422609[354] = 0;
   out_7453067886472422609[355] = 0;
   out_7453067886472422609[356] = 0;
   out_7453067886472422609[357] = 0;
   out_7453067886472422609[358] = 0;
   out_7453067886472422609[359] = 0;
   out_7453067886472422609[360] = 0;
   out_7453067886472422609[361] = 0;
   out_7453067886472422609[362] = 0;
   out_7453067886472422609[363] = 0;
   out_7453067886472422609[364] = 0;
   out_7453067886472422609[365] = 0;
   out_7453067886472422609[366] = 0;
   out_7453067886472422609[367] = 0;
   out_7453067886472422609[368] = 0;
   out_7453067886472422609[369] = 0;
   out_7453067886472422609[370] = 0;
   out_7453067886472422609[371] = 0;
   out_7453067886472422609[372] = 0;
   out_7453067886472422609[373] = 1.0;
   out_7453067886472422609[374] = 0;
   out_7453067886472422609[375] = 0;
   out_7453067886472422609[376] = 0;
   out_7453067886472422609[377] = 0;
   out_7453067886472422609[378] = 0;
   out_7453067886472422609[379] = 0;
   out_7453067886472422609[380] = 0;
   out_7453067886472422609[381] = 0;
   out_7453067886472422609[382] = 0;
   out_7453067886472422609[383] = 0;
   out_7453067886472422609[384] = 0;
   out_7453067886472422609[385] = 0;
   out_7453067886472422609[386] = 0;
   out_7453067886472422609[387] = 0;
   out_7453067886472422609[388] = 0;
   out_7453067886472422609[389] = 0;
   out_7453067886472422609[390] = 0;
   out_7453067886472422609[391] = 0;
   out_7453067886472422609[392] = 0;
   out_7453067886472422609[393] = 0;
   out_7453067886472422609[394] = 0;
   out_7453067886472422609[395] = 1.0;
   out_7453067886472422609[396] = 0;
   out_7453067886472422609[397] = 0;
   out_7453067886472422609[398] = 0;
   out_7453067886472422609[399] = 0;
   out_7453067886472422609[400] = 0;
   out_7453067886472422609[401] = 0;
   out_7453067886472422609[402] = 0;
   out_7453067886472422609[403] = 0;
   out_7453067886472422609[404] = 0;
   out_7453067886472422609[405] = 0;
   out_7453067886472422609[406] = 0;
   out_7453067886472422609[407] = 0;
   out_7453067886472422609[408] = 0;
   out_7453067886472422609[409] = 0;
   out_7453067886472422609[410] = 0;
   out_7453067886472422609[411] = 0;
   out_7453067886472422609[412] = 0;
   out_7453067886472422609[413] = 0;
   out_7453067886472422609[414] = 0;
   out_7453067886472422609[415] = 0;
   out_7453067886472422609[416] = 0;
   out_7453067886472422609[417] = 1.0;
   out_7453067886472422609[418] = 0;
   out_7453067886472422609[419] = 0;
   out_7453067886472422609[420] = 0;
   out_7453067886472422609[421] = 0;
   out_7453067886472422609[422] = 0;
   out_7453067886472422609[423] = 0;
   out_7453067886472422609[424] = 0;
   out_7453067886472422609[425] = 0;
   out_7453067886472422609[426] = 0;
   out_7453067886472422609[427] = 0;
   out_7453067886472422609[428] = 0;
   out_7453067886472422609[429] = 0;
   out_7453067886472422609[430] = 0;
   out_7453067886472422609[431] = 0;
   out_7453067886472422609[432] = 0;
   out_7453067886472422609[433] = 0;
   out_7453067886472422609[434] = 0;
   out_7453067886472422609[435] = 0;
   out_7453067886472422609[436] = 0;
   out_7453067886472422609[437] = 0;
   out_7453067886472422609[438] = 0;
   out_7453067886472422609[439] = 1.0;
   out_7453067886472422609[440] = 0;
   out_7453067886472422609[441] = 0;
   out_7453067886472422609[442] = 0;
   out_7453067886472422609[443] = 0;
   out_7453067886472422609[444] = 0;
   out_7453067886472422609[445] = 0;
   out_7453067886472422609[446] = 0;
   out_7453067886472422609[447] = 0;
   out_7453067886472422609[448] = 0;
   out_7453067886472422609[449] = 0;
   out_7453067886472422609[450] = 0;
   out_7453067886472422609[451] = 0;
   out_7453067886472422609[452] = 0;
   out_7453067886472422609[453] = 0;
   out_7453067886472422609[454] = 0;
   out_7453067886472422609[455] = 0;
   out_7453067886472422609[456] = 0;
   out_7453067886472422609[457] = 0;
   out_7453067886472422609[458] = 0;
   out_7453067886472422609[459] = 0;
   out_7453067886472422609[460] = 0;
   out_7453067886472422609[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_3547963935686363060) {
   out_3547963935686363060[0] = dt*state[7] + state[0];
   out_3547963935686363060[1] = dt*state[8] + state[1];
   out_3547963935686363060[2] = dt*state[9] + state[2];
   out_3547963935686363060[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3547963935686363060[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3547963935686363060[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3547963935686363060[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3547963935686363060[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_3547963935686363060[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_3547963935686363060[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_3547963935686363060[10] = state[10];
   out_3547963935686363060[11] = state[11];
   out_3547963935686363060[12] = state[12];
   out_3547963935686363060[13] = state[13];
   out_3547963935686363060[14] = state[14];
   out_3547963935686363060[15] = state[15];
   out_3547963935686363060[16] = state[16];
   out_3547963935686363060[17] = state[17];
   out_3547963935686363060[18] = state[18];
   out_3547963935686363060[19] = state[19];
   out_3547963935686363060[20] = state[20];
   out_3547963935686363060[21] = state[21];
}
void F_fun(double *state, double dt, double *out_3254137990445528781) {
   out_3254137990445528781[0] = 1;
   out_3254137990445528781[1] = 0;
   out_3254137990445528781[2] = 0;
   out_3254137990445528781[3] = 0;
   out_3254137990445528781[4] = 0;
   out_3254137990445528781[5] = 0;
   out_3254137990445528781[6] = dt;
   out_3254137990445528781[7] = 0;
   out_3254137990445528781[8] = 0;
   out_3254137990445528781[9] = 0;
   out_3254137990445528781[10] = 0;
   out_3254137990445528781[11] = 0;
   out_3254137990445528781[12] = 0;
   out_3254137990445528781[13] = 0;
   out_3254137990445528781[14] = 0;
   out_3254137990445528781[15] = 0;
   out_3254137990445528781[16] = 0;
   out_3254137990445528781[17] = 0;
   out_3254137990445528781[18] = 0;
   out_3254137990445528781[19] = 0;
   out_3254137990445528781[20] = 0;
   out_3254137990445528781[21] = 0;
   out_3254137990445528781[22] = 1;
   out_3254137990445528781[23] = 0;
   out_3254137990445528781[24] = 0;
   out_3254137990445528781[25] = 0;
   out_3254137990445528781[26] = 0;
   out_3254137990445528781[27] = 0;
   out_3254137990445528781[28] = dt;
   out_3254137990445528781[29] = 0;
   out_3254137990445528781[30] = 0;
   out_3254137990445528781[31] = 0;
   out_3254137990445528781[32] = 0;
   out_3254137990445528781[33] = 0;
   out_3254137990445528781[34] = 0;
   out_3254137990445528781[35] = 0;
   out_3254137990445528781[36] = 0;
   out_3254137990445528781[37] = 0;
   out_3254137990445528781[38] = 0;
   out_3254137990445528781[39] = 0;
   out_3254137990445528781[40] = 0;
   out_3254137990445528781[41] = 0;
   out_3254137990445528781[42] = 0;
   out_3254137990445528781[43] = 0;
   out_3254137990445528781[44] = 1;
   out_3254137990445528781[45] = 0;
   out_3254137990445528781[46] = 0;
   out_3254137990445528781[47] = 0;
   out_3254137990445528781[48] = 0;
   out_3254137990445528781[49] = 0;
   out_3254137990445528781[50] = dt;
   out_3254137990445528781[51] = 0;
   out_3254137990445528781[52] = 0;
   out_3254137990445528781[53] = 0;
   out_3254137990445528781[54] = 0;
   out_3254137990445528781[55] = 0;
   out_3254137990445528781[56] = 0;
   out_3254137990445528781[57] = 0;
   out_3254137990445528781[58] = 0;
   out_3254137990445528781[59] = 0;
   out_3254137990445528781[60] = 0;
   out_3254137990445528781[61] = 0;
   out_3254137990445528781[62] = 0;
   out_3254137990445528781[63] = 0;
   out_3254137990445528781[64] = 0;
   out_3254137990445528781[65] = 0;
   out_3254137990445528781[66] = 1;
   out_3254137990445528781[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3254137990445528781[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_3254137990445528781[69] = 0;
   out_3254137990445528781[70] = 0;
   out_3254137990445528781[71] = 0;
   out_3254137990445528781[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3254137990445528781[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3254137990445528781[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3254137990445528781[75] = 0;
   out_3254137990445528781[76] = 0;
   out_3254137990445528781[77] = 0;
   out_3254137990445528781[78] = 0;
   out_3254137990445528781[79] = 0;
   out_3254137990445528781[80] = 0;
   out_3254137990445528781[81] = 0;
   out_3254137990445528781[82] = 0;
   out_3254137990445528781[83] = 0;
   out_3254137990445528781[84] = 0;
   out_3254137990445528781[85] = 0;
   out_3254137990445528781[86] = 0;
   out_3254137990445528781[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3254137990445528781[88] = 1;
   out_3254137990445528781[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_3254137990445528781[90] = 0;
   out_3254137990445528781[91] = 0;
   out_3254137990445528781[92] = 0;
   out_3254137990445528781[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3254137990445528781[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3254137990445528781[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3254137990445528781[96] = 0;
   out_3254137990445528781[97] = 0;
   out_3254137990445528781[98] = 0;
   out_3254137990445528781[99] = 0;
   out_3254137990445528781[100] = 0;
   out_3254137990445528781[101] = 0;
   out_3254137990445528781[102] = 0;
   out_3254137990445528781[103] = 0;
   out_3254137990445528781[104] = 0;
   out_3254137990445528781[105] = 0;
   out_3254137990445528781[106] = 0;
   out_3254137990445528781[107] = 0;
   out_3254137990445528781[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_3254137990445528781[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_3254137990445528781[110] = 1;
   out_3254137990445528781[111] = 0;
   out_3254137990445528781[112] = 0;
   out_3254137990445528781[113] = 0;
   out_3254137990445528781[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3254137990445528781[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3254137990445528781[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3254137990445528781[117] = 0;
   out_3254137990445528781[118] = 0;
   out_3254137990445528781[119] = 0;
   out_3254137990445528781[120] = 0;
   out_3254137990445528781[121] = 0;
   out_3254137990445528781[122] = 0;
   out_3254137990445528781[123] = 0;
   out_3254137990445528781[124] = 0;
   out_3254137990445528781[125] = 0;
   out_3254137990445528781[126] = 0;
   out_3254137990445528781[127] = 0;
   out_3254137990445528781[128] = 0;
   out_3254137990445528781[129] = 0;
   out_3254137990445528781[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3254137990445528781[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_3254137990445528781[132] = 1;
   out_3254137990445528781[133] = 0;
   out_3254137990445528781[134] = 0;
   out_3254137990445528781[135] = 0;
   out_3254137990445528781[136] = 0;
   out_3254137990445528781[137] = 0;
   out_3254137990445528781[138] = 0;
   out_3254137990445528781[139] = 0;
   out_3254137990445528781[140] = 0;
   out_3254137990445528781[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3254137990445528781[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3254137990445528781[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3254137990445528781[144] = 0;
   out_3254137990445528781[145] = 0;
   out_3254137990445528781[146] = 0;
   out_3254137990445528781[147] = 0;
   out_3254137990445528781[148] = 0;
   out_3254137990445528781[149] = 0;
   out_3254137990445528781[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3254137990445528781[151] = 0;
   out_3254137990445528781[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_3254137990445528781[153] = 0;
   out_3254137990445528781[154] = 1;
   out_3254137990445528781[155] = 0;
   out_3254137990445528781[156] = 0;
   out_3254137990445528781[157] = 0;
   out_3254137990445528781[158] = 0;
   out_3254137990445528781[159] = 0;
   out_3254137990445528781[160] = 0;
   out_3254137990445528781[161] = 0;
   out_3254137990445528781[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3254137990445528781[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3254137990445528781[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3254137990445528781[165] = 0;
   out_3254137990445528781[166] = 0;
   out_3254137990445528781[167] = 0;
   out_3254137990445528781[168] = 0;
   out_3254137990445528781[169] = 0;
   out_3254137990445528781[170] = 0;
   out_3254137990445528781[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_3254137990445528781[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_3254137990445528781[173] = 0;
   out_3254137990445528781[174] = 0;
   out_3254137990445528781[175] = 0;
   out_3254137990445528781[176] = 1;
   out_3254137990445528781[177] = 0;
   out_3254137990445528781[178] = 0;
   out_3254137990445528781[179] = 0;
   out_3254137990445528781[180] = 0;
   out_3254137990445528781[181] = 0;
   out_3254137990445528781[182] = 0;
   out_3254137990445528781[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3254137990445528781[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3254137990445528781[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3254137990445528781[186] = 0;
   out_3254137990445528781[187] = 0;
   out_3254137990445528781[188] = 0;
   out_3254137990445528781[189] = 0;
   out_3254137990445528781[190] = 0;
   out_3254137990445528781[191] = 0;
   out_3254137990445528781[192] = 0;
   out_3254137990445528781[193] = 0;
   out_3254137990445528781[194] = 0;
   out_3254137990445528781[195] = 0;
   out_3254137990445528781[196] = 0;
   out_3254137990445528781[197] = 0;
   out_3254137990445528781[198] = 1;
   out_3254137990445528781[199] = 0;
   out_3254137990445528781[200] = 0;
   out_3254137990445528781[201] = 0;
   out_3254137990445528781[202] = 0;
   out_3254137990445528781[203] = 0;
   out_3254137990445528781[204] = 0;
   out_3254137990445528781[205] = 0;
   out_3254137990445528781[206] = 0;
   out_3254137990445528781[207] = 0;
   out_3254137990445528781[208] = 0;
   out_3254137990445528781[209] = 0;
   out_3254137990445528781[210] = 0;
   out_3254137990445528781[211] = 0;
   out_3254137990445528781[212] = 0;
   out_3254137990445528781[213] = 0;
   out_3254137990445528781[214] = 0;
   out_3254137990445528781[215] = 0;
   out_3254137990445528781[216] = 0;
   out_3254137990445528781[217] = 0;
   out_3254137990445528781[218] = 0;
   out_3254137990445528781[219] = 0;
   out_3254137990445528781[220] = 1;
   out_3254137990445528781[221] = 0;
   out_3254137990445528781[222] = 0;
   out_3254137990445528781[223] = 0;
   out_3254137990445528781[224] = 0;
   out_3254137990445528781[225] = 0;
   out_3254137990445528781[226] = 0;
   out_3254137990445528781[227] = 0;
   out_3254137990445528781[228] = 0;
   out_3254137990445528781[229] = 0;
   out_3254137990445528781[230] = 0;
   out_3254137990445528781[231] = 0;
   out_3254137990445528781[232] = 0;
   out_3254137990445528781[233] = 0;
   out_3254137990445528781[234] = 0;
   out_3254137990445528781[235] = 0;
   out_3254137990445528781[236] = 0;
   out_3254137990445528781[237] = 0;
   out_3254137990445528781[238] = 0;
   out_3254137990445528781[239] = 0;
   out_3254137990445528781[240] = 0;
   out_3254137990445528781[241] = 0;
   out_3254137990445528781[242] = 1;
   out_3254137990445528781[243] = 0;
   out_3254137990445528781[244] = 0;
   out_3254137990445528781[245] = 0;
   out_3254137990445528781[246] = 0;
   out_3254137990445528781[247] = 0;
   out_3254137990445528781[248] = 0;
   out_3254137990445528781[249] = 0;
   out_3254137990445528781[250] = 0;
   out_3254137990445528781[251] = 0;
   out_3254137990445528781[252] = 0;
   out_3254137990445528781[253] = 0;
   out_3254137990445528781[254] = 0;
   out_3254137990445528781[255] = 0;
   out_3254137990445528781[256] = 0;
   out_3254137990445528781[257] = 0;
   out_3254137990445528781[258] = 0;
   out_3254137990445528781[259] = 0;
   out_3254137990445528781[260] = 0;
   out_3254137990445528781[261] = 0;
   out_3254137990445528781[262] = 0;
   out_3254137990445528781[263] = 0;
   out_3254137990445528781[264] = 1;
   out_3254137990445528781[265] = 0;
   out_3254137990445528781[266] = 0;
   out_3254137990445528781[267] = 0;
   out_3254137990445528781[268] = 0;
   out_3254137990445528781[269] = 0;
   out_3254137990445528781[270] = 0;
   out_3254137990445528781[271] = 0;
   out_3254137990445528781[272] = 0;
   out_3254137990445528781[273] = 0;
   out_3254137990445528781[274] = 0;
   out_3254137990445528781[275] = 0;
   out_3254137990445528781[276] = 0;
   out_3254137990445528781[277] = 0;
   out_3254137990445528781[278] = 0;
   out_3254137990445528781[279] = 0;
   out_3254137990445528781[280] = 0;
   out_3254137990445528781[281] = 0;
   out_3254137990445528781[282] = 0;
   out_3254137990445528781[283] = 0;
   out_3254137990445528781[284] = 0;
   out_3254137990445528781[285] = 0;
   out_3254137990445528781[286] = 1;
   out_3254137990445528781[287] = 0;
   out_3254137990445528781[288] = 0;
   out_3254137990445528781[289] = 0;
   out_3254137990445528781[290] = 0;
   out_3254137990445528781[291] = 0;
   out_3254137990445528781[292] = 0;
   out_3254137990445528781[293] = 0;
   out_3254137990445528781[294] = 0;
   out_3254137990445528781[295] = 0;
   out_3254137990445528781[296] = 0;
   out_3254137990445528781[297] = 0;
   out_3254137990445528781[298] = 0;
   out_3254137990445528781[299] = 0;
   out_3254137990445528781[300] = 0;
   out_3254137990445528781[301] = 0;
   out_3254137990445528781[302] = 0;
   out_3254137990445528781[303] = 0;
   out_3254137990445528781[304] = 0;
   out_3254137990445528781[305] = 0;
   out_3254137990445528781[306] = 0;
   out_3254137990445528781[307] = 0;
   out_3254137990445528781[308] = 1;
   out_3254137990445528781[309] = 0;
   out_3254137990445528781[310] = 0;
   out_3254137990445528781[311] = 0;
   out_3254137990445528781[312] = 0;
   out_3254137990445528781[313] = 0;
   out_3254137990445528781[314] = 0;
   out_3254137990445528781[315] = 0;
   out_3254137990445528781[316] = 0;
   out_3254137990445528781[317] = 0;
   out_3254137990445528781[318] = 0;
   out_3254137990445528781[319] = 0;
   out_3254137990445528781[320] = 0;
   out_3254137990445528781[321] = 0;
   out_3254137990445528781[322] = 0;
   out_3254137990445528781[323] = 0;
   out_3254137990445528781[324] = 0;
   out_3254137990445528781[325] = 0;
   out_3254137990445528781[326] = 0;
   out_3254137990445528781[327] = 0;
   out_3254137990445528781[328] = 0;
   out_3254137990445528781[329] = 0;
   out_3254137990445528781[330] = 1;
   out_3254137990445528781[331] = 0;
   out_3254137990445528781[332] = 0;
   out_3254137990445528781[333] = 0;
   out_3254137990445528781[334] = 0;
   out_3254137990445528781[335] = 0;
   out_3254137990445528781[336] = 0;
   out_3254137990445528781[337] = 0;
   out_3254137990445528781[338] = 0;
   out_3254137990445528781[339] = 0;
   out_3254137990445528781[340] = 0;
   out_3254137990445528781[341] = 0;
   out_3254137990445528781[342] = 0;
   out_3254137990445528781[343] = 0;
   out_3254137990445528781[344] = 0;
   out_3254137990445528781[345] = 0;
   out_3254137990445528781[346] = 0;
   out_3254137990445528781[347] = 0;
   out_3254137990445528781[348] = 0;
   out_3254137990445528781[349] = 0;
   out_3254137990445528781[350] = 0;
   out_3254137990445528781[351] = 0;
   out_3254137990445528781[352] = 1;
   out_3254137990445528781[353] = 0;
   out_3254137990445528781[354] = 0;
   out_3254137990445528781[355] = 0;
   out_3254137990445528781[356] = 0;
   out_3254137990445528781[357] = 0;
   out_3254137990445528781[358] = 0;
   out_3254137990445528781[359] = 0;
   out_3254137990445528781[360] = 0;
   out_3254137990445528781[361] = 0;
   out_3254137990445528781[362] = 0;
   out_3254137990445528781[363] = 0;
   out_3254137990445528781[364] = 0;
   out_3254137990445528781[365] = 0;
   out_3254137990445528781[366] = 0;
   out_3254137990445528781[367] = 0;
   out_3254137990445528781[368] = 0;
   out_3254137990445528781[369] = 0;
   out_3254137990445528781[370] = 0;
   out_3254137990445528781[371] = 0;
   out_3254137990445528781[372] = 0;
   out_3254137990445528781[373] = 0;
   out_3254137990445528781[374] = 1;
   out_3254137990445528781[375] = 0;
   out_3254137990445528781[376] = 0;
   out_3254137990445528781[377] = 0;
   out_3254137990445528781[378] = 0;
   out_3254137990445528781[379] = 0;
   out_3254137990445528781[380] = 0;
   out_3254137990445528781[381] = 0;
   out_3254137990445528781[382] = 0;
   out_3254137990445528781[383] = 0;
   out_3254137990445528781[384] = 0;
   out_3254137990445528781[385] = 0;
   out_3254137990445528781[386] = 0;
   out_3254137990445528781[387] = 0;
   out_3254137990445528781[388] = 0;
   out_3254137990445528781[389] = 0;
   out_3254137990445528781[390] = 0;
   out_3254137990445528781[391] = 0;
   out_3254137990445528781[392] = 0;
   out_3254137990445528781[393] = 0;
   out_3254137990445528781[394] = 0;
   out_3254137990445528781[395] = 0;
   out_3254137990445528781[396] = 1;
   out_3254137990445528781[397] = 0;
   out_3254137990445528781[398] = 0;
   out_3254137990445528781[399] = 0;
   out_3254137990445528781[400] = 0;
   out_3254137990445528781[401] = 0;
   out_3254137990445528781[402] = 0;
   out_3254137990445528781[403] = 0;
   out_3254137990445528781[404] = 0;
   out_3254137990445528781[405] = 0;
   out_3254137990445528781[406] = 0;
   out_3254137990445528781[407] = 0;
   out_3254137990445528781[408] = 0;
   out_3254137990445528781[409] = 0;
   out_3254137990445528781[410] = 0;
   out_3254137990445528781[411] = 0;
   out_3254137990445528781[412] = 0;
   out_3254137990445528781[413] = 0;
   out_3254137990445528781[414] = 0;
   out_3254137990445528781[415] = 0;
   out_3254137990445528781[416] = 0;
   out_3254137990445528781[417] = 0;
   out_3254137990445528781[418] = 1;
   out_3254137990445528781[419] = 0;
   out_3254137990445528781[420] = 0;
   out_3254137990445528781[421] = 0;
   out_3254137990445528781[422] = 0;
   out_3254137990445528781[423] = 0;
   out_3254137990445528781[424] = 0;
   out_3254137990445528781[425] = 0;
   out_3254137990445528781[426] = 0;
   out_3254137990445528781[427] = 0;
   out_3254137990445528781[428] = 0;
   out_3254137990445528781[429] = 0;
   out_3254137990445528781[430] = 0;
   out_3254137990445528781[431] = 0;
   out_3254137990445528781[432] = 0;
   out_3254137990445528781[433] = 0;
   out_3254137990445528781[434] = 0;
   out_3254137990445528781[435] = 0;
   out_3254137990445528781[436] = 0;
   out_3254137990445528781[437] = 0;
   out_3254137990445528781[438] = 0;
   out_3254137990445528781[439] = 0;
   out_3254137990445528781[440] = 1;
}
void h_4(double *state, double *unused, double *out_4410787759120580449) {
   out_4410787759120580449[0] = state[10] + state[13];
   out_4410787759120580449[1] = state[11] + state[14];
   out_4410787759120580449[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_5512660098689845475) {
   out_5512660098689845475[0] = 0;
   out_5512660098689845475[1] = 0;
   out_5512660098689845475[2] = 0;
   out_5512660098689845475[3] = 0;
   out_5512660098689845475[4] = 0;
   out_5512660098689845475[5] = 0;
   out_5512660098689845475[6] = 0;
   out_5512660098689845475[7] = 0;
   out_5512660098689845475[8] = 0;
   out_5512660098689845475[9] = 0;
   out_5512660098689845475[10] = 1;
   out_5512660098689845475[11] = 0;
   out_5512660098689845475[12] = 0;
   out_5512660098689845475[13] = 1;
   out_5512660098689845475[14] = 0;
   out_5512660098689845475[15] = 0;
   out_5512660098689845475[16] = 0;
   out_5512660098689845475[17] = 0;
   out_5512660098689845475[18] = 0;
   out_5512660098689845475[19] = 0;
   out_5512660098689845475[20] = 0;
   out_5512660098689845475[21] = 0;
   out_5512660098689845475[22] = 0;
   out_5512660098689845475[23] = 0;
   out_5512660098689845475[24] = 0;
   out_5512660098689845475[25] = 0;
   out_5512660098689845475[26] = 0;
   out_5512660098689845475[27] = 0;
   out_5512660098689845475[28] = 0;
   out_5512660098689845475[29] = 0;
   out_5512660098689845475[30] = 0;
   out_5512660098689845475[31] = 0;
   out_5512660098689845475[32] = 0;
   out_5512660098689845475[33] = 1;
   out_5512660098689845475[34] = 0;
   out_5512660098689845475[35] = 0;
   out_5512660098689845475[36] = 1;
   out_5512660098689845475[37] = 0;
   out_5512660098689845475[38] = 0;
   out_5512660098689845475[39] = 0;
   out_5512660098689845475[40] = 0;
   out_5512660098689845475[41] = 0;
   out_5512660098689845475[42] = 0;
   out_5512660098689845475[43] = 0;
   out_5512660098689845475[44] = 0;
   out_5512660098689845475[45] = 0;
   out_5512660098689845475[46] = 0;
   out_5512660098689845475[47] = 0;
   out_5512660098689845475[48] = 0;
   out_5512660098689845475[49] = 0;
   out_5512660098689845475[50] = 0;
   out_5512660098689845475[51] = 0;
   out_5512660098689845475[52] = 0;
   out_5512660098689845475[53] = 0;
   out_5512660098689845475[54] = 0;
   out_5512660098689845475[55] = 0;
   out_5512660098689845475[56] = 1;
   out_5512660098689845475[57] = 0;
   out_5512660098689845475[58] = 0;
   out_5512660098689845475[59] = 1;
   out_5512660098689845475[60] = 0;
   out_5512660098689845475[61] = 0;
   out_5512660098689845475[62] = 0;
   out_5512660098689845475[63] = 0;
   out_5512660098689845475[64] = 0;
   out_5512660098689845475[65] = 0;
}
void h_9(double *state, double *unused, double *out_4264504783842197092) {
   out_4264504783842197092[0] = state[10];
   out_4264504783842197092[1] = state[11];
   out_4264504783842197092[2] = state[12];
}
void H_9(double *state, double *unused, double *out_5271470452060254830) {
   out_5271470452060254830[0] = 0;
   out_5271470452060254830[1] = 0;
   out_5271470452060254830[2] = 0;
   out_5271470452060254830[3] = 0;
   out_5271470452060254830[4] = 0;
   out_5271470452060254830[5] = 0;
   out_5271470452060254830[6] = 0;
   out_5271470452060254830[7] = 0;
   out_5271470452060254830[8] = 0;
   out_5271470452060254830[9] = 0;
   out_5271470452060254830[10] = 1;
   out_5271470452060254830[11] = 0;
   out_5271470452060254830[12] = 0;
   out_5271470452060254830[13] = 0;
   out_5271470452060254830[14] = 0;
   out_5271470452060254830[15] = 0;
   out_5271470452060254830[16] = 0;
   out_5271470452060254830[17] = 0;
   out_5271470452060254830[18] = 0;
   out_5271470452060254830[19] = 0;
   out_5271470452060254830[20] = 0;
   out_5271470452060254830[21] = 0;
   out_5271470452060254830[22] = 0;
   out_5271470452060254830[23] = 0;
   out_5271470452060254830[24] = 0;
   out_5271470452060254830[25] = 0;
   out_5271470452060254830[26] = 0;
   out_5271470452060254830[27] = 0;
   out_5271470452060254830[28] = 0;
   out_5271470452060254830[29] = 0;
   out_5271470452060254830[30] = 0;
   out_5271470452060254830[31] = 0;
   out_5271470452060254830[32] = 0;
   out_5271470452060254830[33] = 1;
   out_5271470452060254830[34] = 0;
   out_5271470452060254830[35] = 0;
   out_5271470452060254830[36] = 0;
   out_5271470452060254830[37] = 0;
   out_5271470452060254830[38] = 0;
   out_5271470452060254830[39] = 0;
   out_5271470452060254830[40] = 0;
   out_5271470452060254830[41] = 0;
   out_5271470452060254830[42] = 0;
   out_5271470452060254830[43] = 0;
   out_5271470452060254830[44] = 0;
   out_5271470452060254830[45] = 0;
   out_5271470452060254830[46] = 0;
   out_5271470452060254830[47] = 0;
   out_5271470452060254830[48] = 0;
   out_5271470452060254830[49] = 0;
   out_5271470452060254830[50] = 0;
   out_5271470452060254830[51] = 0;
   out_5271470452060254830[52] = 0;
   out_5271470452060254830[53] = 0;
   out_5271470452060254830[54] = 0;
   out_5271470452060254830[55] = 0;
   out_5271470452060254830[56] = 1;
   out_5271470452060254830[57] = 0;
   out_5271470452060254830[58] = 0;
   out_5271470452060254830[59] = 0;
   out_5271470452060254830[60] = 0;
   out_5271470452060254830[61] = 0;
   out_5271470452060254830[62] = 0;
   out_5271470452060254830[63] = 0;
   out_5271470452060254830[64] = 0;
   out_5271470452060254830[65] = 0;
}
void h_10(double *state, double *unused, double *out_1276705416788479855) {
   out_1276705416788479855[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_1276705416788479855[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_1276705416788479855[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6589591562994162559) {
   out_6589591562994162559[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6589591562994162559[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6589591562994162559[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6589591562994162559[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6589591562994162559[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6589591562994162559[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6589591562994162559[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6589591562994162559[7] = 0;
   out_6589591562994162559[8] = 0;
   out_6589591562994162559[9] = 0;
   out_6589591562994162559[10] = 0;
   out_6589591562994162559[11] = 0;
   out_6589591562994162559[12] = 0;
   out_6589591562994162559[13] = 0;
   out_6589591562994162559[14] = 0;
   out_6589591562994162559[15] = 0;
   out_6589591562994162559[16] = 1;
   out_6589591562994162559[17] = 0;
   out_6589591562994162559[18] = 0;
   out_6589591562994162559[19] = 1;
   out_6589591562994162559[20] = 0;
   out_6589591562994162559[21] = 0;
   out_6589591562994162559[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6589591562994162559[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6589591562994162559[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6589591562994162559[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6589591562994162559[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6589591562994162559[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6589591562994162559[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6589591562994162559[29] = 0;
   out_6589591562994162559[30] = 0;
   out_6589591562994162559[31] = 0;
   out_6589591562994162559[32] = 0;
   out_6589591562994162559[33] = 0;
   out_6589591562994162559[34] = 0;
   out_6589591562994162559[35] = 0;
   out_6589591562994162559[36] = 0;
   out_6589591562994162559[37] = 0;
   out_6589591562994162559[38] = 0;
   out_6589591562994162559[39] = 1;
   out_6589591562994162559[40] = 0;
   out_6589591562994162559[41] = 0;
   out_6589591562994162559[42] = 1;
   out_6589591562994162559[43] = 0;
   out_6589591562994162559[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6589591562994162559[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6589591562994162559[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6589591562994162559[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6589591562994162559[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6589591562994162559[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6589591562994162559[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6589591562994162559[51] = 0;
   out_6589591562994162559[52] = 0;
   out_6589591562994162559[53] = 0;
   out_6589591562994162559[54] = 0;
   out_6589591562994162559[55] = 0;
   out_6589591562994162559[56] = 0;
   out_6589591562994162559[57] = 0;
   out_6589591562994162559[58] = 0;
   out_6589591562994162559[59] = 0;
   out_6589591562994162559[60] = 0;
   out_6589591562994162559[61] = 0;
   out_6589591562994162559[62] = 1;
   out_6589591562994162559[63] = 0;
   out_6589591562994162559[64] = 0;
   out_6589591562994162559[65] = 1;
}
void h_12(double *state, double *unused, double *out_4489758644873872208) {
   out_4489758644873872208[0] = state[0];
   out_4489758644873872208[1] = state[1];
   out_4489758644873872208[2] = state[2];
}
void H_12(double *state, double *unused, double *out_493203690657883680) {
   out_493203690657883680[0] = 1;
   out_493203690657883680[1] = 0;
   out_493203690657883680[2] = 0;
   out_493203690657883680[3] = 0;
   out_493203690657883680[4] = 0;
   out_493203690657883680[5] = 0;
   out_493203690657883680[6] = 0;
   out_493203690657883680[7] = 0;
   out_493203690657883680[8] = 0;
   out_493203690657883680[9] = 0;
   out_493203690657883680[10] = 0;
   out_493203690657883680[11] = 0;
   out_493203690657883680[12] = 0;
   out_493203690657883680[13] = 0;
   out_493203690657883680[14] = 0;
   out_493203690657883680[15] = 0;
   out_493203690657883680[16] = 0;
   out_493203690657883680[17] = 0;
   out_493203690657883680[18] = 0;
   out_493203690657883680[19] = 0;
   out_493203690657883680[20] = 0;
   out_493203690657883680[21] = 0;
   out_493203690657883680[22] = 0;
   out_493203690657883680[23] = 1;
   out_493203690657883680[24] = 0;
   out_493203690657883680[25] = 0;
   out_493203690657883680[26] = 0;
   out_493203690657883680[27] = 0;
   out_493203690657883680[28] = 0;
   out_493203690657883680[29] = 0;
   out_493203690657883680[30] = 0;
   out_493203690657883680[31] = 0;
   out_493203690657883680[32] = 0;
   out_493203690657883680[33] = 0;
   out_493203690657883680[34] = 0;
   out_493203690657883680[35] = 0;
   out_493203690657883680[36] = 0;
   out_493203690657883680[37] = 0;
   out_493203690657883680[38] = 0;
   out_493203690657883680[39] = 0;
   out_493203690657883680[40] = 0;
   out_493203690657883680[41] = 0;
   out_493203690657883680[42] = 0;
   out_493203690657883680[43] = 0;
   out_493203690657883680[44] = 0;
   out_493203690657883680[45] = 0;
   out_493203690657883680[46] = 1;
   out_493203690657883680[47] = 0;
   out_493203690657883680[48] = 0;
   out_493203690657883680[49] = 0;
   out_493203690657883680[50] = 0;
   out_493203690657883680[51] = 0;
   out_493203690657883680[52] = 0;
   out_493203690657883680[53] = 0;
   out_493203690657883680[54] = 0;
   out_493203690657883680[55] = 0;
   out_493203690657883680[56] = 0;
   out_493203690657883680[57] = 0;
   out_493203690657883680[58] = 0;
   out_493203690657883680[59] = 0;
   out_493203690657883680[60] = 0;
   out_493203690657883680[61] = 0;
   out_493203690657883680[62] = 0;
   out_493203690657883680[63] = 0;
   out_493203690657883680[64] = 0;
   out_493203690657883680[65] = 0;
}
void h_35(double *state, double *unused, double *out_8696122944070004010) {
   out_8696122944070004010[0] = state[7];
   out_8696122944070004010[1] = state[8];
   out_8696122944070004010[2] = state[9];
}
void H_35(double *state, double *unused, double *out_2252359341667130029) {
   out_2252359341667130029[0] = 0;
   out_2252359341667130029[1] = 0;
   out_2252359341667130029[2] = 0;
   out_2252359341667130029[3] = 0;
   out_2252359341667130029[4] = 0;
   out_2252359341667130029[5] = 0;
   out_2252359341667130029[6] = 0;
   out_2252359341667130029[7] = 1;
   out_2252359341667130029[8] = 0;
   out_2252359341667130029[9] = 0;
   out_2252359341667130029[10] = 0;
   out_2252359341667130029[11] = 0;
   out_2252359341667130029[12] = 0;
   out_2252359341667130029[13] = 0;
   out_2252359341667130029[14] = 0;
   out_2252359341667130029[15] = 0;
   out_2252359341667130029[16] = 0;
   out_2252359341667130029[17] = 0;
   out_2252359341667130029[18] = 0;
   out_2252359341667130029[19] = 0;
   out_2252359341667130029[20] = 0;
   out_2252359341667130029[21] = 0;
   out_2252359341667130029[22] = 0;
   out_2252359341667130029[23] = 0;
   out_2252359341667130029[24] = 0;
   out_2252359341667130029[25] = 0;
   out_2252359341667130029[26] = 0;
   out_2252359341667130029[27] = 0;
   out_2252359341667130029[28] = 0;
   out_2252359341667130029[29] = 0;
   out_2252359341667130029[30] = 1;
   out_2252359341667130029[31] = 0;
   out_2252359341667130029[32] = 0;
   out_2252359341667130029[33] = 0;
   out_2252359341667130029[34] = 0;
   out_2252359341667130029[35] = 0;
   out_2252359341667130029[36] = 0;
   out_2252359341667130029[37] = 0;
   out_2252359341667130029[38] = 0;
   out_2252359341667130029[39] = 0;
   out_2252359341667130029[40] = 0;
   out_2252359341667130029[41] = 0;
   out_2252359341667130029[42] = 0;
   out_2252359341667130029[43] = 0;
   out_2252359341667130029[44] = 0;
   out_2252359341667130029[45] = 0;
   out_2252359341667130029[46] = 0;
   out_2252359341667130029[47] = 0;
   out_2252359341667130029[48] = 0;
   out_2252359341667130029[49] = 0;
   out_2252359341667130029[50] = 0;
   out_2252359341667130029[51] = 0;
   out_2252359341667130029[52] = 0;
   out_2252359341667130029[53] = 1;
   out_2252359341667130029[54] = 0;
   out_2252359341667130029[55] = 0;
   out_2252359341667130029[56] = 0;
   out_2252359341667130029[57] = 0;
   out_2252359341667130029[58] = 0;
   out_2252359341667130029[59] = 0;
   out_2252359341667130029[60] = 0;
   out_2252359341667130029[61] = 0;
   out_2252359341667130029[62] = 0;
   out_2252359341667130029[63] = 0;
   out_2252359341667130029[64] = 0;
   out_2252359341667130029[65] = 0;
}
void h_32(double *state, double *unused, double *out_2592146495080937647) {
   out_2592146495080937647[0] = state[3];
   out_2592146495080937647[1] = state[4];
   out_2592146495080937647[2] = state[5];
   out_2592146495080937647[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8522971196901590084) {
   out_8522971196901590084[0] = 0;
   out_8522971196901590084[1] = 0;
   out_8522971196901590084[2] = 0;
   out_8522971196901590084[3] = 1;
   out_8522971196901590084[4] = 0;
   out_8522971196901590084[5] = 0;
   out_8522971196901590084[6] = 0;
   out_8522971196901590084[7] = 0;
   out_8522971196901590084[8] = 0;
   out_8522971196901590084[9] = 0;
   out_8522971196901590084[10] = 0;
   out_8522971196901590084[11] = 0;
   out_8522971196901590084[12] = 0;
   out_8522971196901590084[13] = 0;
   out_8522971196901590084[14] = 0;
   out_8522971196901590084[15] = 0;
   out_8522971196901590084[16] = 0;
   out_8522971196901590084[17] = 0;
   out_8522971196901590084[18] = 0;
   out_8522971196901590084[19] = 0;
   out_8522971196901590084[20] = 0;
   out_8522971196901590084[21] = 0;
   out_8522971196901590084[22] = 0;
   out_8522971196901590084[23] = 0;
   out_8522971196901590084[24] = 0;
   out_8522971196901590084[25] = 0;
   out_8522971196901590084[26] = 1;
   out_8522971196901590084[27] = 0;
   out_8522971196901590084[28] = 0;
   out_8522971196901590084[29] = 0;
   out_8522971196901590084[30] = 0;
   out_8522971196901590084[31] = 0;
   out_8522971196901590084[32] = 0;
   out_8522971196901590084[33] = 0;
   out_8522971196901590084[34] = 0;
   out_8522971196901590084[35] = 0;
   out_8522971196901590084[36] = 0;
   out_8522971196901590084[37] = 0;
   out_8522971196901590084[38] = 0;
   out_8522971196901590084[39] = 0;
   out_8522971196901590084[40] = 0;
   out_8522971196901590084[41] = 0;
   out_8522971196901590084[42] = 0;
   out_8522971196901590084[43] = 0;
   out_8522971196901590084[44] = 0;
   out_8522971196901590084[45] = 0;
   out_8522971196901590084[46] = 0;
   out_8522971196901590084[47] = 0;
   out_8522971196901590084[48] = 0;
   out_8522971196901590084[49] = 1;
   out_8522971196901590084[50] = 0;
   out_8522971196901590084[51] = 0;
   out_8522971196901590084[52] = 0;
   out_8522971196901590084[53] = 0;
   out_8522971196901590084[54] = 0;
   out_8522971196901590084[55] = 0;
   out_8522971196901590084[56] = 0;
   out_8522971196901590084[57] = 0;
   out_8522971196901590084[58] = 0;
   out_8522971196901590084[59] = 0;
   out_8522971196901590084[60] = 0;
   out_8522971196901590084[61] = 0;
   out_8522971196901590084[62] = 0;
   out_8522971196901590084[63] = 0;
   out_8522971196901590084[64] = 0;
   out_8522971196901590084[65] = 0;
   out_8522971196901590084[66] = 0;
   out_8522971196901590084[67] = 0;
   out_8522971196901590084[68] = 0;
   out_8522971196901590084[69] = 0;
   out_8522971196901590084[70] = 0;
   out_8522971196901590084[71] = 0;
   out_8522971196901590084[72] = 1;
   out_8522971196901590084[73] = 0;
   out_8522971196901590084[74] = 0;
   out_8522971196901590084[75] = 0;
   out_8522971196901590084[76] = 0;
   out_8522971196901590084[77] = 0;
   out_8522971196901590084[78] = 0;
   out_8522971196901590084[79] = 0;
   out_8522971196901590084[80] = 0;
   out_8522971196901590084[81] = 0;
   out_8522971196901590084[82] = 0;
   out_8522971196901590084[83] = 0;
   out_8522971196901590084[84] = 0;
   out_8522971196901590084[85] = 0;
   out_8522971196901590084[86] = 0;
   out_8522971196901590084[87] = 0;
}
void h_13(double *state, double *unused, double *out_5320318911182793356) {
   out_5320318911182793356[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_5320318911182793356[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_5320318911182793356[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_6260235854627074248) {
   out_6260235854627074248[0] = 0;
   out_6260235854627074248[1] = 0;
   out_6260235854627074248[2] = 0;
   out_6260235854627074248[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6260235854627074248[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6260235854627074248[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_6260235854627074248[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6260235854627074248[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_6260235854627074248[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_6260235854627074248[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_6260235854627074248[10] = 0;
   out_6260235854627074248[11] = 0;
   out_6260235854627074248[12] = 0;
   out_6260235854627074248[13] = 0;
   out_6260235854627074248[14] = 0;
   out_6260235854627074248[15] = 0;
   out_6260235854627074248[16] = 0;
   out_6260235854627074248[17] = 0;
   out_6260235854627074248[18] = 0;
   out_6260235854627074248[19] = 0;
   out_6260235854627074248[20] = 0;
   out_6260235854627074248[21] = 0;
   out_6260235854627074248[22] = 0;
   out_6260235854627074248[23] = 0;
   out_6260235854627074248[24] = 0;
   out_6260235854627074248[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6260235854627074248[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6260235854627074248[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6260235854627074248[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_6260235854627074248[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_6260235854627074248[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_6260235854627074248[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_6260235854627074248[32] = 0;
   out_6260235854627074248[33] = 0;
   out_6260235854627074248[34] = 0;
   out_6260235854627074248[35] = 0;
   out_6260235854627074248[36] = 0;
   out_6260235854627074248[37] = 0;
   out_6260235854627074248[38] = 0;
   out_6260235854627074248[39] = 0;
   out_6260235854627074248[40] = 0;
   out_6260235854627074248[41] = 0;
   out_6260235854627074248[42] = 0;
   out_6260235854627074248[43] = 0;
   out_6260235854627074248[44] = 0;
   out_6260235854627074248[45] = 0;
   out_6260235854627074248[46] = 0;
   out_6260235854627074248[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6260235854627074248[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_6260235854627074248[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6260235854627074248[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6260235854627074248[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_6260235854627074248[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_6260235854627074248[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_6260235854627074248[54] = 0;
   out_6260235854627074248[55] = 0;
   out_6260235854627074248[56] = 0;
   out_6260235854627074248[57] = 0;
   out_6260235854627074248[58] = 0;
   out_6260235854627074248[59] = 0;
   out_6260235854627074248[60] = 0;
   out_6260235854627074248[61] = 0;
   out_6260235854627074248[62] = 0;
   out_6260235854627074248[63] = 0;
   out_6260235854627074248[64] = 0;
   out_6260235854627074248[65] = 0;
}
void h_14(double *state, double *unused, double *out_4264504783842197092) {
   out_4264504783842197092[0] = state[10];
   out_4264504783842197092[1] = state[11];
   out_4264504783842197092[2] = state[12];
}
void H_14(double *state, double *unused, double *out_5271470452060254830) {
   out_5271470452060254830[0] = 0;
   out_5271470452060254830[1] = 0;
   out_5271470452060254830[2] = 0;
   out_5271470452060254830[3] = 0;
   out_5271470452060254830[4] = 0;
   out_5271470452060254830[5] = 0;
   out_5271470452060254830[6] = 0;
   out_5271470452060254830[7] = 0;
   out_5271470452060254830[8] = 0;
   out_5271470452060254830[9] = 0;
   out_5271470452060254830[10] = 1;
   out_5271470452060254830[11] = 0;
   out_5271470452060254830[12] = 0;
   out_5271470452060254830[13] = 0;
   out_5271470452060254830[14] = 0;
   out_5271470452060254830[15] = 0;
   out_5271470452060254830[16] = 0;
   out_5271470452060254830[17] = 0;
   out_5271470452060254830[18] = 0;
   out_5271470452060254830[19] = 0;
   out_5271470452060254830[20] = 0;
   out_5271470452060254830[21] = 0;
   out_5271470452060254830[22] = 0;
   out_5271470452060254830[23] = 0;
   out_5271470452060254830[24] = 0;
   out_5271470452060254830[25] = 0;
   out_5271470452060254830[26] = 0;
   out_5271470452060254830[27] = 0;
   out_5271470452060254830[28] = 0;
   out_5271470452060254830[29] = 0;
   out_5271470452060254830[30] = 0;
   out_5271470452060254830[31] = 0;
   out_5271470452060254830[32] = 0;
   out_5271470452060254830[33] = 1;
   out_5271470452060254830[34] = 0;
   out_5271470452060254830[35] = 0;
   out_5271470452060254830[36] = 0;
   out_5271470452060254830[37] = 0;
   out_5271470452060254830[38] = 0;
   out_5271470452060254830[39] = 0;
   out_5271470452060254830[40] = 0;
   out_5271470452060254830[41] = 0;
   out_5271470452060254830[42] = 0;
   out_5271470452060254830[43] = 0;
   out_5271470452060254830[44] = 0;
   out_5271470452060254830[45] = 0;
   out_5271470452060254830[46] = 0;
   out_5271470452060254830[47] = 0;
   out_5271470452060254830[48] = 0;
   out_5271470452060254830[49] = 0;
   out_5271470452060254830[50] = 0;
   out_5271470452060254830[51] = 0;
   out_5271470452060254830[52] = 0;
   out_5271470452060254830[53] = 0;
   out_5271470452060254830[54] = 0;
   out_5271470452060254830[55] = 0;
   out_5271470452060254830[56] = 1;
   out_5271470452060254830[57] = 0;
   out_5271470452060254830[58] = 0;
   out_5271470452060254830[59] = 0;
   out_5271470452060254830[60] = 0;
   out_5271470452060254830[61] = 0;
   out_5271470452060254830[62] = 0;
   out_5271470452060254830[63] = 0;
   out_5271470452060254830[64] = 0;
   out_5271470452060254830[65] = 0;
}
void h_33(double *state, double *unused, double *out_57093419937807770) {
   out_57093419937807770[0] = state[16];
   out_57093419937807770[1] = state[17];
   out_57093419937807770[2] = state[18];
}
void H_33(double *state, double *unused, double *out_5402916346305987633) {
   out_5402916346305987633[0] = 0;
   out_5402916346305987633[1] = 0;
   out_5402916346305987633[2] = 0;
   out_5402916346305987633[3] = 0;
   out_5402916346305987633[4] = 0;
   out_5402916346305987633[5] = 0;
   out_5402916346305987633[6] = 0;
   out_5402916346305987633[7] = 0;
   out_5402916346305987633[8] = 0;
   out_5402916346305987633[9] = 0;
   out_5402916346305987633[10] = 0;
   out_5402916346305987633[11] = 0;
   out_5402916346305987633[12] = 0;
   out_5402916346305987633[13] = 0;
   out_5402916346305987633[14] = 0;
   out_5402916346305987633[15] = 0;
   out_5402916346305987633[16] = 1;
   out_5402916346305987633[17] = 0;
   out_5402916346305987633[18] = 0;
   out_5402916346305987633[19] = 0;
   out_5402916346305987633[20] = 0;
   out_5402916346305987633[21] = 0;
   out_5402916346305987633[22] = 0;
   out_5402916346305987633[23] = 0;
   out_5402916346305987633[24] = 0;
   out_5402916346305987633[25] = 0;
   out_5402916346305987633[26] = 0;
   out_5402916346305987633[27] = 0;
   out_5402916346305987633[28] = 0;
   out_5402916346305987633[29] = 0;
   out_5402916346305987633[30] = 0;
   out_5402916346305987633[31] = 0;
   out_5402916346305987633[32] = 0;
   out_5402916346305987633[33] = 0;
   out_5402916346305987633[34] = 0;
   out_5402916346305987633[35] = 0;
   out_5402916346305987633[36] = 0;
   out_5402916346305987633[37] = 0;
   out_5402916346305987633[38] = 0;
   out_5402916346305987633[39] = 1;
   out_5402916346305987633[40] = 0;
   out_5402916346305987633[41] = 0;
   out_5402916346305987633[42] = 0;
   out_5402916346305987633[43] = 0;
   out_5402916346305987633[44] = 0;
   out_5402916346305987633[45] = 0;
   out_5402916346305987633[46] = 0;
   out_5402916346305987633[47] = 0;
   out_5402916346305987633[48] = 0;
   out_5402916346305987633[49] = 0;
   out_5402916346305987633[50] = 0;
   out_5402916346305987633[51] = 0;
   out_5402916346305987633[52] = 0;
   out_5402916346305987633[53] = 0;
   out_5402916346305987633[54] = 0;
   out_5402916346305987633[55] = 0;
   out_5402916346305987633[56] = 0;
   out_5402916346305987633[57] = 0;
   out_5402916346305987633[58] = 0;
   out_5402916346305987633[59] = 0;
   out_5402916346305987633[60] = 0;
   out_5402916346305987633[61] = 0;
   out_5402916346305987633[62] = 1;
   out_5402916346305987633[63] = 0;
   out_5402916346305987633[64] = 0;
   out_5402916346305987633[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_8687680363762493539) {
  H(in_vec, out_8687680363762493539);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_8136490426412747881) {
  err_fun(nom_x, delta_x, out_8136490426412747881);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1524655933590429885) {
  inv_err_fun(nom_x, true_x, out_1524655933590429885);
}
void live_H_mod_fun(double *state, double *out_7453067886472422609) {
  H_mod_fun(state, out_7453067886472422609);
}
void live_f_fun(double *state, double dt, double *out_3547963935686363060) {
  f_fun(state,  dt, out_3547963935686363060);
}
void live_F_fun(double *state, double dt, double *out_3254137990445528781) {
  F_fun(state,  dt, out_3254137990445528781);
}
void live_h_4(double *state, double *unused, double *out_4410787759120580449) {
  h_4(state, unused, out_4410787759120580449);
}
void live_H_4(double *state, double *unused, double *out_5512660098689845475) {
  H_4(state, unused, out_5512660098689845475);
}
void live_h_9(double *state, double *unused, double *out_4264504783842197092) {
  h_9(state, unused, out_4264504783842197092);
}
void live_H_9(double *state, double *unused, double *out_5271470452060254830) {
  H_9(state, unused, out_5271470452060254830);
}
void live_h_10(double *state, double *unused, double *out_1276705416788479855) {
  h_10(state, unused, out_1276705416788479855);
}
void live_H_10(double *state, double *unused, double *out_6589591562994162559) {
  H_10(state, unused, out_6589591562994162559);
}
void live_h_12(double *state, double *unused, double *out_4489758644873872208) {
  h_12(state, unused, out_4489758644873872208);
}
void live_H_12(double *state, double *unused, double *out_493203690657883680) {
  H_12(state, unused, out_493203690657883680);
}
void live_h_35(double *state, double *unused, double *out_8696122944070004010) {
  h_35(state, unused, out_8696122944070004010);
}
void live_H_35(double *state, double *unused, double *out_2252359341667130029) {
  H_35(state, unused, out_2252359341667130029);
}
void live_h_32(double *state, double *unused, double *out_2592146495080937647) {
  h_32(state, unused, out_2592146495080937647);
}
void live_H_32(double *state, double *unused, double *out_8522971196901590084) {
  H_32(state, unused, out_8522971196901590084);
}
void live_h_13(double *state, double *unused, double *out_5320318911182793356) {
  h_13(state, unused, out_5320318911182793356);
}
void live_H_13(double *state, double *unused, double *out_6260235854627074248) {
  H_13(state, unused, out_6260235854627074248);
}
void live_h_14(double *state, double *unused, double *out_4264504783842197092) {
  h_14(state, unused, out_4264504783842197092);
}
void live_H_14(double *state, double *unused, double *out_5271470452060254830) {
  H_14(state, unused, out_5271470452060254830);
}
void live_h_33(double *state, double *unused, double *out_57093419937807770) {
  h_33(state, unused, out_57093419937807770);
}
void live_H_33(double *state, double *unused, double *out_5402916346305987633) {
  H_33(state, unused, out_5402916346305987633);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
